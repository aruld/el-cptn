version: "3.8"

services:
  db:
    image: postgres:14.7-alpine3.17
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    restart: unless-stopped
    volumes:
      - redis:/data
    expose:
      - 6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app-ux:
    image: ghcr.io/cptn-io/app-ux:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - APP_URL=${APP_URL}

  mgmt-svc:
    image: ghcr.io/cptn-io/mgmt-svc:latest
    deploy:
      replicas: 1
    expose:
      - 8080
    volumes:
      - ./logs:/logs
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CPTN_CRYPTO_SECRET=${CPTN_CRYPTO_SECRET}
      - JWT_SECRET=${JWT_SECRET}
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:8080/actuator/health | grep -q 'UP'" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  ingestion-svc:
    image: ghcr.io/cptn-io/ingestion-svc:latest
    deploy:
      replicas: 1
    volumes:
      - ./logs:/logs
    expose:
      - 8081
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CPTN_CRYPTO_SECRET=${CPTN_CRYPTO_SECRET}
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:8081/actuator/health | grep -q 'UP'" ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      mgmt-svc:
        condition: service_healthy

  processor:
    image: ghcr.io/cptn-io/processor:latest
    deploy:
      replicas: 1
    volumes:
      - ./logs:/app/logs
    environment:
      - NODE_ENV=production
      - PGHOST=db
      - PGPORT=5432
      - PGDATABASE=${DB_NAME}
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASSWORD}
      - PGSSLMODE=disable
      - CPTN_CRYPTO_SECRET=${CPTN_CRYPTO_SECRET}
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "ps -ef | grep 'node src/index.js' | grep -v grep > /dev/null || exit 1" ]
      interval: 10s
      timeout: 15s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      mgmt-svc:
        condition: service_healthy

volumes:
  postgres:
  redis: